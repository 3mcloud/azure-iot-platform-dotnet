parameters:
  subscriptionName:
  locationName:
  environmentName:
  subscriptionId:
  applicationCode:
  applicationShortCode:
  appInsightsLocation: 
  environmentCategory:
  kubernetesVersion:
  sendgridEmail:
  aksAgentVmSize: Standard_DS2_v2
  sysAdmins:
  azureDevOpsProjectId:
  testPipelineId:
  runVersion:
  testPipelineRunId:

jobs:
  - template: get-approval.yaml
    parameters:
      environmentName: ${{parameters.environmentName}}

  - job: printVariables
    displayName: Print variables
    dependsOn:
      - getApproval
    variables:
      - template: variables-deploy-infra.yaml
        parameters:
          subscriptionName: ${{parameters.subscriptionName}}
          locationName: ${{parameters.locationName}}
          environmentName: ${{parameters.environmentName}}
          subscriptionId: ${{parameters.subscriptionId}}
          applicationCode: ${{parameters.applicationCode}}
          applicationShortCode: ${{parameters.applicationShortCode}}
          environmentCategory: ${{parameters.environmentCategory}}
    steps:
      - checkout: none

      - script: |-
          echo "parameter: subscriptionName: ${{parameters.subscriptionName}}"
          echo "parameter: locationName: ${{parameters.locationName}}"
          echo "parameter: appInsightsLocation: ${{parameters.appInsightsLocation}}"
          echo "parameter: environmentName: ${{parameters.environmentName}}"
          echo "parameter: subscriptionId: ${{parameters.subscriptionId}}"
          echo "parameter: applicationCode: ${{parameters.applicationCode}}"
          echo "parameter: applicationShortCode: ${{parameters.applicationShortCode}}"
          echo "parameter: environmentCategory: ${{parameters.environmentCategory}}"
          echo "parameter: kubernetesVersion: ${{parameters.kubernetesVersion}}"
          echo "parameter: sendgridEmail: ${{parameters.sendgridEmail}}"
          echo "variable: aksPartialName: $(aksPartialName)"
          echo "variable: appConfigurationPartialName: $(appConfigurationPartialName)"
          echo "variable: appInsightsPartialName: $(appInsightsPartialName)"
          echo "variable: armDirectory: $(armDirectory)"
          echo "variable: automationPartialName: $(automationPartialName)"
          echo "variable: blobContainerPartialName: $(blobContainerPartialName)"
          echo "variable: cosmosDbName: $(cosmosDbName)"
          echo "variable: cosmosDbAccountPartialName: $(cosmosDbAccountPartialName)"
          echo "variable: crslPlatformKeyVault: $(crslPlatformKeyVault)"
          echo "variable: defaultSasKeyName: $(defaultSasKeyName)"
          echo "variable: eventHubPartialName: $(eventHubPartialName)"
          echo "variable: functionApp1PartialName: $(functionApp1PartialName)"
          echo "variable: functionApp2PartialName: $(functionApp2PartialName)"
          echo "variable: keyVaultPartialName: $(keyVaultPartialName)"
          echo "variable: mapsPartialName: $(mapsPartialName)"
          echo "variable: omsWorkspacePartialName: $(omsWorkspacePartialName)"
          echo "variable: storageAccountPartialName: $(storageAccountPartialName)"
          echo "variable: tenantId: $(tenantId)"
          echo "variable: userObjId: $(userObjId)"
          echo "variable: aksName: $(aksName)"
          echo "variable: appConfigurationName: $(appConfigurationName)"
          echo "variable: appInsightsName: $(appInsightsName)"
          echo "variable: armParametersDirectory: $(armParametersDirectory)"
          echo "variable: armTemplatesDirectory: $(armTemplatesDirectory)"
          echo "variable: automationName: $(automationName)"
          echo "variable: blobContainerName: $(blobContainerName)"
          echo "variable: cosmosDbAccountName: $(cosmosDbAccountName)"
          echo "variable: eventHubName: $(eventHubName)"
          echo "variable: functionApp1Name: $(functionApp1Name)"
          echo "variable: functionApp2Name: $(functionApp2Name)"
          echo "variable: keyVaultName: $(keyVaultName)"
          echo "variable: mapsName: $(mapsName)"
          echo "variable: omsWorkspaceName: $(omsWorkspaceName)"
          echo "variable: resourceGroupName: $(resourceGroupName)"
          echo "variable: storageAccountName: $(storageAccountName)"
        displayName: Print variables

  - job: aks
    displayName: Provision AKS
    variables:
      - template: variables-deploy-infra.yaml
        parameters:
          subscriptionName: ${{parameters.subscriptionName}}
          locationName: ${{parameters.locationName}}
          environmentName: ${{parameters.environmentName}}
          subscriptionId: ${{parameters.subscriptionId}}
          applicationCode: ${{parameters.applicationCode}}
          applicationShortCode: ${{parameters.applicationShortCode}}
          environmentCategory: ${{parameters.environmentCategory}}
    steps:
      - checkout: self
        displayName: Checkout repository

      - task: AzureCLI@2
        displayName: Update the service principal key for AKS
        inputs:
          azureSubscription: ${{parameters.subscriptionName}}
          scriptLocation: inlineScript
          scriptType: bash
          inlineScript: |-
            set -Eeuxo pipefail
            aksInstanceCount=`az aks list --query "[?name=='$(aksName)'] | length(@)"`
            echo "servicePrincipalId:$servicePrincipalId"
            echo "servicePrincipalKey:$servicePrincipalKey"
            echo 
            if [ "$aksInstanceCount" != "0" ]
            then
              az aks update-credentials --resource-group $(resourceGroupName) --name $(aksName) --reset-service-principal --service-principal $servicePrincipalId --client-secret $servicePrincipalKey
            fi
          addSpnToEnvironment: true
